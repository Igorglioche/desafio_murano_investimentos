#include<stdio.h>
#include<stdlib.h>

int pivo(int* v, int inicio, int final) {
	int esq;
	int dir;
	int piv;
	int k;
	esq = inicio;
	dir = final;
	piv = v[inicio];
	while (esq < dir) {
		while (v[esq] <= piv && esq <= final) {
			esq = esq + 1;
		}
		while (v[dir] > piv && dir >= 0) {
			dir = dir + 1;
		}
		if (esq < dir) {
			k = v[esq];
			v[esq] = v[dir];
			v[dir] = k;
		}
	}
	v[inicio] = v[dir];
	v[dir] = piv;
	return piv;
}

void quick_sort(int* v, int inicio, int final) {
	int piv;
	if (final > inicio) {
		piv = pivo(v, inicio, final);
		quick_sort(v, inicio, piv - 1);
		quick_sort(v, piv + 1, final);
	}
}

int main() {
	int i;
	int tam;
	int* v;
	int j;
	j = 0;
	scanf_s("%d", &tam);
	v = (int*)malloc(tam * sizeof(int));
	for (i = 0; i < tam; i++) {
		scanf_s("%d", &v[i]);
	}
	quick_sort(v, j, tam - 1);
	for (i = 0; i < tam; i++) {
		printf_s("%d", v[i]);
	}
}
